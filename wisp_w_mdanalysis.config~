# NECESSARY PARAMETERS
output_directory = 'testing'

node_selection_file = 'make_node_selections.py'
trajectory_functions_file = 'trajectory_analysis_functions.py'
#network_functions_file = 'network_analysis_functions.py'

trajectory_analysis_boolean = True
pdb = '/home/rbdavid/Projects/Molecular_Machines/Helicase_DENV/Analysis/Comparisons/WISP/AMBER_ssrna_atp/production.150/truncated.pdb'	# Local or Global position of a pdb file of the MD system that will be analyzed
source_selection_string_list = ['atp_459_G_Phosphate','GLU_118','MG_460']
sink_selection_string_list = ['A5_452_Sugar','G_453_Phosphate','A_454_Phosphate']

functionalized_weighted_correlation_matrix_file_name = 'func_corr_matrix.dat'

# PARAMETERS NECESSARY TO ID NODES AND POSITIONS
substrate_node_definition = 'COM'
#substrate_selection_string = 'not resname Na+ Cl- WAT'
substrate_selection_string = 'protein'
contact_map_distance_cutoff = 15.0
weight_by_avg_distance_boolean = True

# IF NODES ARE DEFINED FOR NONSTANDARD RESIDUES OR SPECIAL NODE DEFINITIONS ARE USED FOR CERTAIN RESIDUES
nonstandard_substrates_selection = 'nucleic or resname A3 A5 U3 U3 G5 G3 C5 C3 atp adp PHX MG'
homemade_selections = ['A5','A3','A','G5','G3','G','C5','C3','C','T5','T3','T','U5','U3','U','atp','adp','PHX','MG']


# if trajectory_analysis_boolean == True:
selection_output_filename = 'selection_list.out'
#alignment_selection = 'protein and name CA and (resid 20:25 50:55 73:75 90:94 112:116 142:147 165:169 190:194 214:218 236:240 253:258 303:307)'
traj_list = ['/home/rbdavid/Projects/Molecular_Machines/Helicase_DENV/Analysis/Comparisons/WISP/AMBER_ssrna_atp/production.150/production.150.dcd']

## if trajectory_analysis_boolean == False:
#user_input_correlation_data = None
#user_input_avg_node_node_distance_data = None
#user_input_binary_contact_map_data = None

# OUTPUT PARAMETERS
summary_boolean = True		# Boolean value; if True, the script will print out a summary file that breaks down the parameters used in the analysis and how to rerun the same analysis
summary_filename = 'node_node_corr.summary'

